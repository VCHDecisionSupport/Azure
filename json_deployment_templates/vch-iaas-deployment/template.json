// https://github.com/Azure/azure-quickstart-templates/blob/master/201-vm-dynamic-data-disks-selection/azuredeploy.json
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "canadacentral",
            "type": "string"
        },
        "virtualNetworkName": {
            "defaultValue": "vchds-vnettest",
            "type": "string"
        },
        "virtualNetworkIpRange": {
            "defaultValue": "192.168.0.0/16",
            "type": "string"
        },
        "storageAccountName": {
            "defaultValue": "vchdsstorageaccttest",
            "type": "string"
        },
        "workLoadAd": {
            "type": "object",
            "defaultValue": {
                "name": "adtest",
                "ipRange": "192.168.0.0/24",
                "ipPrefix": "192.168.0.",
                "count": 2,
                "vmSize": "Standard_DS13_v2"

            }
        },
        "adminName": {
            "type": "string",
            "defaultValue": "Floater1",
            "metadata": {
                "description": "VM admin user name."
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "VM admin password."
            }
        }
    },
    "variables": {
        "adSubNetName": "[concat(parameters('workLoadAd')['Name'],'-subnet')]",
        "adNsgName": "[concat(parameters('workLoadAd')['Name'],'-nsg')]",
        "adVmName": "[concat(parameters('workLoadAd')['Name'],'Vm')]"
    },
    "resources": [{
            "comments": "Generalized from resource: '/subscriptions/4830d36a-e5da-4f38-8647-b8ca702c1b1d/resourceGroups/vchds-root-rg/providers/Microsoft.Network/virtualNetworks/vchds-vnet'.",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkIpRange')]"
                    ]
                },
                "dhcpOptions": {
                    "dnsServers": []
                },
                "subnets": [{
                    "name": "[variables('adSubNetName')]",
                    "properties": {
                        "addressPrefix": "[parameters('workLoadAd')['ipRange']]",
                        "networkSecurityGroup": {
                            "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                        }
                    }
                }]
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4830d36a-e5da-4f38-8647-b8ca702c1b1d/resourceGroups/vchds-root-rg/providers/Microsoft.Network/networkSecurityGroups/jb-subnet-nsg'.",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[variables('adNsgName')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "securityRules": [{
                    "name": "rdp-rule",
                    "properties": {
                        "description": "Allow www RDP",
                        "protocol": "Tcp",
                        "sourcePortRange": "*",
                        "destinationPortRange": "*",
                        "sourceAddressPrefix": "Internet",
                        "destinationAddressPrefix": "*",
                        "access": "Allow",
                        "priority": 100,
                        "direction": "Inbound"
                    }
                }]
            },
            "dependsOn": []
        },


        {
            "comments": "Generalized from resource: '/subscriptions/4830d36a-e5da-4f38-8647-b8ca702c1b1d/resourceGroups/vchds-root-rg/providers/Microsoft.Compute/virtualMachines/JumpBoxVm1'.",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('adVmName'), copyIndex())]",
            "copy": {
                "name": "vmsCopy",
                "count": "[parameters('workLoadAd')['count']]"
            },
            "apiVersion": "2016-04-30-preview",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('workLoadAd')['vmSize']]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "MicrosoftWindowsServer",
                        "offer": "WindowsServer",
                        "sku": "2012-R2-Datacenter",
                        "version": "latest"
                    },
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(variables('adVmName'), copyIndex(),'OsDisk')]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', concat('/vhds/', concat(variables('adVmName'), copyIndex()),'OsDisk.vhd'))]"
                        },
                        "caching": "ReadWrite"
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('adVmName'), copyIndex())]",
                    "adminUsername": "[parameters('adminName')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('adVmName'), copyIndex(),'Nic'))]"
                    }]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', '/')]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('adVmName'), copyIndex(),'Nic'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4830d36a-e5da-4f38-8647-b8ca702c1b1d/resourceGroups/vchds-root-rg/providers/Microsoft.Network/networkInterfaces/JumpBoxVm1Nic'.",
            "type": "Microsoft.Network/networkInterfaces",
            "copy": {
                "name": "vmsCopy",
                "count": "[parameters('workLoadAd')['count']]"
            },
            "name": "[concat(variables('adVmName'), copyIndex(),'Nic')]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [{
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAddress": "[concat(parameters('workLoadAd')['ipPrefix'],mul(10, add(copyIndex(), 1)))]",
                        "privateIPAllocationMethod": "Static",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('adVmName'), copyIndex(),'Pip'))]"
                        },
                        "subnet": {
                            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', variables('adSubNetName'))]"
                        }
                    }
                }],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false,
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('adVmName'), copyIndex(),'Pip'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('adNsgName'))]"
            ]
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4830d36a-e5da-4f38-8647-b8ca702c1b1d/resourceGroups/vchds-root-rg/providers/Microsoft.Network/publicIPAddresses/JumpBoxVm1Pip'.",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('adVmName'), copyIndex(),'Pip')]",
            "copy": {
                "name": "vmsCopy",
                "count": "[parameters('workLoadAd')['count']]"
            },
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('adVmName'), copyIndex()))]"
                }
            },
            "dependsOn": []
        },
        {
            "comments": "Generalized from resource: '/subscriptions/4830d36a-e5da-4f38-8647-b8ca702c1b1d/resourceGroups/vchds-root-rg/providers/Microsoft.Storage/storageAccounts/vchdsstorageacct'.",
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_GRS",
                "tier": "Standard"
            },
            "kind": "Storage",
            "name": "[parameters('storageAccountName')]",
            "apiVersion": "2016-01-01",
            "location": "canadacentral",
            "tags": {},
            "properties": {},
            "dependsOn": []
        }

    ]
}