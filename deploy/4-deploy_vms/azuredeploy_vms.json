// https://github.com/Azure/azure-quickstart-templates/blob/master/201-vm-dynamic-data-disks-selection/azuredeploy.json
{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "storageAccountName": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string"
        },
        "subnetName": {
            "type": "string"
        },
        "workloadName": {
            "type": "string"
        },
        "addressStub": {
            "type": "string"
        },
        "adminPassword": {
            "type": "string",
            "metadata": {
                "description": "VM admin password."
            }
        },
        "imageReference": {
            "defaultValue": {
                "publisher": "MicrosoftWindowsServer",
                "offer": "WindowsServer",
                "sku": "2012-R2-Datacenter",
                "version": "latest"
            },
            "type": "object"
        },
        "vmCount": {
            "type": "int"
        },
        "vmSize": {
            "type": "string"
        }
    },
    "variables": {
        "vmNameStub": "[concat(parameters('workloadName'),'Vm')]",
        "pipNameStub": "[concat(parameters('workloadName'),'Pip')]",
        "nicNameStub": "[concat(parameters('workloadName'),'Nic')]",
        "OsDiskNameStub": "[concat(parameters('workloadName'),'OsDisk')]",
        "apiVersionManagedDisks": "2016-04-30-preview"
    },
    "resources": [

        {
            "comments": "creates virtual machine according to given parameters above.  depends on creation of other resources: ip address",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[concat(variables('vmNameStub'), copyIndex())]",
            "copy": {
                "name": "vmsCopy",
                "count": "[parameters('vmCount')]"
            },
            "apiVersion": "[variables('apiVersionManagedDisks')]",
            "location": "[resourceGroup().location]",
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('imageReference')]",
                    "osDisk": {
                        "osType": "Windows",
                        "name": "[concat(variables('OsDiskNameStub'), copyIndex())]",
                        "createOption": "FromImage",
                        "vhd": {
                            "uri": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', concat('/vhds/', concat(variables('OsDiskNameStub'), copyIndex()),'.vhd'))]"
                        },
                        "caching": "ReadWrite",
                        "diskSizeGB": 100
                    },
                    "dataDisks": []
                },
                "osProfile": {
                    "computerName": "[concat(variables('vmNameStub'), copyIndex())]",
                    "adminUsername": "[concat(variables('vmNameStub'), copyIndex())]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "windowsConfiguration": {
                        "provisionVMAgent": true,
                        "enableAutomaticUpdates": true
                    },
                    "secrets": []
                },
                "networkProfile": {
                    "networkInterfaces": [{
                        "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameStub'), copyIndex()))]"
                    }]
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicNameStub'), copyIndex()))]"
            ]
        },
        {
            "comments": "creates network interface and associates it with public and private static ips",
            "type": "Microsoft.Network/networkInterfaces",
            "copy": {
                "name": "vmsCopy",
                "count": "[parameters('vmCount')]"
            },
            "name": "[concat(variables('nicNameStub'), copyIndex())]",
            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "ipConfigurations": [{
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAddress": "[concat(parameters('addressStub'),mul(10, add(copyIndex(), 1)))]",
                        "privateIPAllocationMethod": "Static",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('pipNameStub'), copyIndex()))]"
                        },
                        "subnet": {
                            "id": "[concat(resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName')), '/subnets/', parameters('subnetName'))]"
                        }
                    }
                }],
                "dnsSettings": {
                    "dnsServers": []
                },
                "enableIPForwarding": false
            },
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', concat(variables('pipNameStub'), copyIndex()))]"
            ]
        },
        {
            "comments": "creates public static IP",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[concat(variables('pipNameStub'), copyIndex())]",
            "copy": {
                "name": "vmsCopy",
                "count": "[parameters('vmCount')]"
            },

            "apiVersion": "2016-03-30",
            "location": "[resourceGroup().location]",
            "properties": {
                "publicIPAllocationMethod": "Static",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[toLower(concat(variables('vmNameStub'), copyIndex()))]"
                }
            },
            "dependsOn": []
        }
    ]
}